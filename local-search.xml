<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>漏洞挖掘指南</title>
    <link href="/2021/12/24/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%8C%87%E5%8D%97/"/>
    <url>/2021/12/24/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>既然本文档的标题是漏洞挖掘指南，那为了后续更加方便学习，因此在这里就来好好的做一版漏洞挖掘指南。</p><h3 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h3><p>涉及的主要是大学中的计算机基本课程，夯实计算机基础。</p><h4 id="C-与STL内容"><a href="#C-与STL内容" class="headerlink" title="C++与STL内容"></a>C++与STL内容</h4><p>编程是学习漏洞挖掘和代码审计最基础的技能,参考笔记：<a href="https://github.com/Kiprey/Skr_Learning/tree/master/week1-2">https://github.com/Kiprey/Skr_Learning/tree/master/week1-2</a></p><p>学习STL无疑是学习侯捷的课程，不会的查看侯捷的书籍</p><p><strong>课程资源</strong></p><p>链接: <a href="https://pan.baidu.com/s/1Nq9ic1K5ipUJKFke6Hi-RA">https://pan.baidu.com/s/1Nq9ic1K5ipUJKFke6Hi-RA</a> 提取码: 8bpw </p><p>–来自百度网盘超级会员v5的分享</p><p>至于C++语言，在大学都是修过，这里就不过多的推荐教程</p><p>刷一波AcWing的语法基础课</p><p>教程<a href="https://www.acwing.com/activity/content/21/">https://www.acwing.com/activity/content/21/</a></p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="CSAPP"><a href="#CSAPP" class="headerlink" title="CSAPP"></a>CSAPP</h4><p>深入学习计算机系统</p><p>斯坦福大学的<a href="https://www.bilibili.com/video/BV1iW411d7hd?spm_id_from=333.999.0.0">CSAPP</a>是很不错的，全英文教学，不过B站有翻译好的</p><p>完成课后作业是很有帮助</p><p><a href="http://csapp.cs.cmu.edu/3e/labs.html">http://csapp.cs.cmu.edu/3e/labs.html</a></p><p><a href="https://github.com/Kiprey/Skr_Learning/tree/master/week9-19/CSAPP-Lab">课后作业参考</a></p><p>不过也可以看国内的视频</p><p><a href="https://www.bilibili.com/video/BV1kE411X7S5">https://www.bilibili.com/video/BV1kE411X7S5</a></p><p><a href="https://www.bilibili.com/video/BV1rE41127Re">https://www.bilibili.com/video/BV1rE41127Re</a> </p><p><a href="https://www.bilibili.com/video/BV1jE411874k">https://www.bilibili.com/video/BV1jE411874k</a></p><h4 id="编译原理-CS144"><a href="#编译原理-CS144" class="headerlink" title="编译原理 CS144"></a>编译原理 CS144</h4><p>学习编译原理是至关重要的，很多大学都不开设这门课程，但是在实战中或安全研究中会用到大量编译原理的知识。</p><p>学习编译原理首推的<a href="https://www.bilibili.com/video/BV1NE411376V?spm_id_from=333.999.0.0">斯坦福的CS143</a></p><p>除此之外，<a href="https://www.bilibili.com/video/BV1zW411t7YE?spm_id_from=333.999.0.0">哈工大的编译原理</a>也是很不错的教程</p><p>学习任务就是自己实现一个小语言的解释器或者编译器</p><p>优秀笔记</p><p>1、<a href="https://github.com/Kiprey/Skr_Learning/tree/master/week3-6">https://github.com/Kiprey/Skr_Learning/tree/master/week3-6</a></p><h4 id="网络编程-unix编程"><a href="#网络编程-unix编程" class="headerlink" title="网络编程/unix编程"></a>网络编程/unix编程</h4><p>掌握进程间通信、多进程多线程等等知识</p><p>建议直接跟着《unix网络编程》这本书进行学习，实现相关的功能</p><p>可以完成两个基本覆盖知识点的开源项目</p><p>1、<a href="https://github.com/linyacool/WebServer">tinyserver</a></p><p>2、<a href="https://kiprey.github.io/2021/05/WebServer-1/">webServer</a>  <a href="https://github.com/linyacool/WebServer">源码</a></p><p><a href="https://www.bilibili.com/video/BV1TA411q75p?p=1&share_medium=iphone&share_plat=ios&share_source=QQ&share_tag=s_i&timestamp=1616325343&unique_k=HsCpcU">网络编程实战课程</a>还是值得看看的</p><h4 id="编译原理实战——LLVM-IR-Pass代码优化"><a href="#编译原理实战——LLVM-IR-Pass代码优化" class="headerlink" title="编译原理实战——LLVM IR Pass代码优化"></a>编译原理实战——LLVM IR Pass代码优化</h4><p>参考课程：<a href="https://github.com/UofT-EcoSystem/CSCD70">CSCD70</a> <a href="http://www.cs.toronto.edu/~pekhimenko/courses/cscd70-w20/">多伦多大学课程</a> <a href="https://github.com/UofT-EcoSystem/CSCD70">CSCD70github资料</a></p><p>参考笔记：<a href="https://github.com/Kiprey/Skr_Learning/tree/master/week7-8">https://github.com/Kiprey/Skr_Learning/tree/master/week7-8</a></p><p>学习书籍：<a href="https://github.com/xiaoweiChen/Learn-LLVM-12">学习LLVM12</a></p><p>官方文档：<a href="https://llvm.org/docs/WritingAnLLVMPass.html">LLVM文档</a></p><p>学习教程：1、<a href="https://llvm-tutorial-cn.readthedocs.io/en/latest/index.html">https://llvm-tutorial-cn.readthedocs.io/en/latest/index.html</a></p><p>2、<a href="https://llvm.org/docs/tutorial/index.html">https://llvm.org/docs/tutorial/index.html</a></p><p>相关的开源项目</p><p>1、<a href="https://github.com/chenx6/baby_obfuscator">一款基于ollvm魔改工具</a></p><p>2、<a href="https://github.com/veritas501/ToyObfuscator">LLVM增强的ollvm</a></p><p>3、<a href="https://github.com/NudistBeaaach/Chained-CFG-obfuscation-pass">LLVM CFG混淆pass</a></p><p>4、<a href="https://github.com/banach-space/llvm-tutor">A collection of out-of-tree LLVM passes for teaching and learning</a></p><p>5、<a href="https://github.com/chris124567/obfus">使用全新的pass-manager管理llvm pass</a></p><h4 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h4><p>CS144 <a href="https://cs144.github.io/">计算机网络</a></p><p>视频链接：<a href="https://www.bilibili.com/video/BV137411Z7LR?from=search&seid=5561201338480593178&spm_id_from=333.337.0.0">CS144</a></p><p>中科大的<a href="https://www.bilibili.com/video/BV1JV411t7ow?p=1">计算机网络</a>课程讲解也是不错的</p><p>课后实验笔记</p><p>1、<a href="https://github.com/huangrt01/TCP-Lab">lab-writeup</a></p><p>2、<a href="https://blog.csdn.net/kangyupl/article/details/108589594">Stanford CS144 学习笔记</a></p><h4 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h4><p>首先推荐的是哈工大的<a href="https://www.bilibili.com/video/BV1t4411e7LH?from=search&seid=1912602767882056182&spm_id_from=333.337.0.0">计算机组成原理</a></p><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>如果是想要学习kernel相关的知识，那么操作系统是一门很好的课程来带入我们学习内核</p><p>国外的课程推荐：<a href="https://www.bilibili.com/video/BV19k4y1C7kA">麻省理工的操作系统</a></p><p>相关的笔记：<a href="https://blog.csdn.net/u013577996/article/details/108679997">Mit6.S081学习笔记</a></p><p>国内课程推荐：学堂在线中的清华大学的<a href="https://www.xuetangx.com/course/THU08091000267/7753473?channel=i.area.manual_search">操作系统</a>课程</p><p>相关的课后作业：<a href="https://chyyuu.gitbooks.io/ucore_os_docs/content/">8个lab实验</a> 、不过有<a href="https://www.lanqiao.cn/courses/221/learning/?id=709">在线的平台进行实验</a>，感觉用处不大，还是考虑自己本地搭建平台吧</p><p>相关的笔记：<a href="https://github.com/Kiprey/Skr_Learning/tree/master/week9-19/uCore">操作系统实验笔记</a></p><p><a href="https://github.com/chyyuu/os_course_info">https://github.com/chyyuu/os_course_info</a></p><p>以上内容就是基础课程，学习完成这些基础内容，计算机能力可谓相当扎实。</p><h3 id="能力篇"><a href="#能力篇" class="headerlink" title="能力篇"></a>能力篇</h3><h4 id="基础漏洞学习"><a href="#基础漏洞学习" class="headerlink" title="基础漏洞学习"></a>基础漏洞学习</h4><p>想要学习挖洞，那必然是需要熟悉基础漏洞原理，学习途径大致如下</p><p>1、<a href="https://ctf-wiki.org/pwn/linux/user-mode/environment/">CTF-wiki</a> 或者看<a href="https://guyinatuxedo.github.io/index.html#nightmare">Nightmare</a></p><p>在CTF-wiki中包含了绝大多数漏洞类型，同时也是含有漏洞练习,同时可以训练写EXP</p><p>2、<a href="https://pwnable.tw/">pwnable.tw</a></p><p>练习pwn题目还是要去做高质量的赛事的题目，很多滥竽充数的比赛的题目就是无限脑洞</p><p><a href="https://www.yuque.com/attachments/yuque/0/2021/pdf/12733198/1638846793648-8bb13fa7-76fd-4303-bc9d-1844d5d0e21d.pdf">📎pwnable.tw-部分题目WP合集.pdf</a></p><p>3、<a href="https://pwnable.kr/">pwnable.kr</a></p><p>与tw相似的网站</p><p>4、首选推荐的是这个pwn.college上的<a href="https://dojo.pwn.college/challenges">Challenges</a></p><p>在该挑战中，不仅仅是做题目，其中还涉及很多pwn相关的视频教程，非常适合用来学习</p><p>5、<a href="https://tc.gts3.org/cs6265/2021/tut/tut00-intro.html">CS6265信息安全实验</a></p><p>课程资源：之前长亭科技开展了一场免费的PWN培训</p><p>链接: <a href="https://pan.baidu.com/s/1_eS-irqHkEGd2WzQkuqwNQ">https://pan.baidu.com/s/1_eS-irqHkEGd2WzQkuqwNQ</a> 提取码: b6o1 </p><p>–来自百度网盘超级会员v5的分享</p><p>快速学习pwn可以直接看上面的长亭公开课或者<a href="https://github.com/yuawn/NTU-Computer-Security">中国台湾大学开设的PWN课程</a>，涵盖了CTF-wiki中大部分知识。</p><p>同时在B站中有<a href="https://www.bilibili.com/video/BV1Uv411j7fr?spm_id_from=333.999.0.0">团队讲解PWN</a>，整体来看是一个不错的教程。</p><p>相关书籍推荐</p><p>《程序员的自我修养：链接、装载和库》</p><p>《CTF竞赛权威指南：PWN》</p><p>《黑客之道 漏洞发掘的艺术》</p><p>《漏洞战争 软件漏洞分析精要》</p><p>《0Day安全：软件漏洞分析技术》</p><p>当然还有NULL和FlappyPig两个战队出的CTF指南</p><h4 id="辅助技能学习"><a href="#辅助技能学习" class="headerlink" title="辅助技能学习"></a>辅助技能学习</h4><p>这个部分就是学习一些辅助或者是提效的知识点</p><h5 id="1、fuzz学习"><a href="#1、fuzz学习" class="headerlink" title="1、fuzz学习"></a><strong>1、fuzz学习</strong></h5><p>fuzz的学习是一个很大的方向，很多方向的漏洞挖掘都可以使用fuzz来进行，学习fuzz不仅仅是学习这个工具，而是去学习这个思想，重点是掌握修改fuzz工具来挖掘自己的目标。</p><p>学习和调试<a href="https://github.com/google/AFL">AFL fuzz</a>，几乎后期的很多fuzz工具都是基于这个来修改的。</p><p>相关资料：</p><p>1、<a href="https://eternalsakura13.com/2020/08/23/afl/">sakuraのAFL源码全注释</a></p><p>2、<a href="https://paper.seebug.org/1732/">AFL二三事——源码分析</a>  当然在<a href="https://bbs.pediy.com/thread-269534.htm">看雪</a>和他自己的<a href="https://www.v4ler1an.com/categories/">博客</a>中有更多内容，深信服千里眼</p><p>3、<a href="http://rk700.github.io/2017/12/28/afl-internals/">AFL内部实现细节小记</a></p><p>4、<a href="http://rk700.github.io/2018/01/04/afl-mutations/">AFL文件变异一览</a></p><p>当然还有很多关于AFL的文章，不过最终都是需要自己动手调试代码</p><p>作业：动态调试AFL代码完成笔记</p><p>视频教程</p><p>①、<a href="https://www.youtube.com/watch?v=6YLz9IGAGLw">Fuzzing with AFL - by Michael Macnair</a></p><p>该教程时间比较长，3小时的讲解，但是对AFL的讲解是很细致的，是学习AFL的一门好教程。</p><p>fuzz相关的月刊</p><p><a href="https://academy.fuzzinglabs.com/community/public">Fuzzing Labs Monthly Newsletter</a></p><p>每个月初都会总结上个月出现的与fuzz相关的文章、工具、论文等等</p><h5 id="2、fuzz实战分析"><a href="#2、fuzz实战分析" class="headerlink" title="2、fuzz实战分析"></a><strong>2、fuzz实战分析</strong></h5><p>利用fuzz去进行漏洞挖掘，实际分析案例来增加对fuzz的原理的熟悉程度。</p><p>①、</p><ul><li>实战首选是推荐使用<a href="https://github.com/antonio-morales/Fuzzing101">Fuzzing101</a>，总共含有10个真实的样本提供练习</li><li><a href="https://www.anquanke.com/post/id/254167">AFL-Training</a></li></ul><p>作业：依靠fuzz分析crash并分析漏洞，总结两个练习</p><p>②、如果在分析漏洞过程中觉得路径太过于陡峭，不妨先从下面这两个教程中来进行学习。</p><ul><li><a href="http://fuzzing.in/codelabs/fuzzing_opensource/index.html?index=../..index#0">Fuzzing open source softwares with AFL</a></li><li><a href="http://fuzzing.in/codelabs/fuzzing_linux/index.html?index=../..index#0">Fuzzing and finding vulnerabilities on Linux</a></li></ul><p>这两个内容是差不多的，可以当做是入门级别的教程，想比fuzzing101来讲并不是这么陡峭</p><p>作业：实现教程中的程序，总结相关的技术，写出同样的教程。</p><p>③、拓展课视频课程</p><p>来自youtube的专门讲解各种<a href="https://www.youtube.com/c/MrHardik05/playlists">fuzz的视频教程</a></p><p>主讲人来自印度的，英语听起来很麻烦，也无法识别，好在有操作，可以看视频操作。</p><p>在其中涉及到很多fuzz工具的讲解</p><ul><li><p>fuzzing基础课</p></li><li><p>fuzzing with AFL\Hongfuzz\WinAFL\libfuzzer\radamsa\AFL++\libAFL\e9afl\Jackalope</p></li><li><p>其中还含有调试相关、patch相关的内容</p></li></ul><p>除此之外，youtube上的<a href="https://www.youtube.com/playlist?list=PLa-iO6ehPFJiT0R0RtjUNUeGRqgU54TN_">fuzzing lab的课程</a>可以看看，不过缺点是不成体系，得加钱</p><p>作业：学习其中提到的各种优秀的fuzz工具</p><h5 id="3、Codeql实战"><a href="#3、Codeql实战" class="headerlink" title="3、Codeql实战"></a><strong>3、Codeql实战</strong></h5><p><a href="https://github.com/github/codeql">Codeql官方代码</a></p><p>这个github与Semmle合并开源出来的产品，该工具的功能是非常强大的。</p><p>官方文档是学习这个工具最好的手册</p><p>参考文章</p><p>1、<a href="https://lennysec.github.io/codql-and-cve-2019-3560/">CodeQL 若干问题思考及 CVE-2019-3560 审计详解</a></p><p>2、<a href="https://www.yuque.com/attachments/yuque/0/2021/pdf/12733198/1638892159591-cd8a4572-5bd4-4859-a6a0-bcee5f5404f1.pdf">📎根据GitHub_Security_Lab上的例子学习CodeQL.pdf</a> <a href="https://lab.github.com/githubtraining/codeql-u-boot-challenge-(cc++)">github_Security_lab</a></p><p>3、<a href="https://jorgectf.gitlab.io/blog/post/practical-codeql-introduction/">CodeQL实用指南</a></p><p>视频教程</p><p>1、<a href="https://www.youtube.com/watch?v=XmAEgl8bVhg">CodeQL as an auditing oracle </a></p><p>2、<a href="https://www.youtube.com/watch?v=pYzfGaLTqC0">Finding security vulnerabilities in JavaScript with CodeQL</a></p><h3 id="实战篇"><a href="#实战篇" class="headerlink" title="实战篇"></a>实战篇</h3><h4 id="Android漏洞"><a href="#Android漏洞" class="headerlink" title="Android漏洞"></a>Android漏洞</h4><h5 id="1、Android应用层漏洞"><a href="#1、Android应用层漏洞" class="headerlink" title="1、Android应用层漏洞"></a><strong>1、Android应用层漏洞</strong></h5><p>这里是学习应用层的漏洞，并不是深入到系统级别。</p><p>基本的了解</p><p><a href="https://www.yuque.com/attachments/yuque/0/2021/pdf/12733198/1638857164558-9e80b5f4-a7fc-4743-b849-82d3ef154ee1.pdf">📎张波：安卓漏洞利用与技术实践.pdf</a></p><p>同时今年的byteCTF的<a href="https://shvu8e0g7u.feishu.cn/docs/doccndYygIwisrk0FGKnKvE0Jhg#">Android题目</a>还是可以拿来学习一下</p><p>Android APP层的漏洞类型基本都是基于四大组件为攻击入口来进行。</p><p>网上基本开源的和商用的自动化检测平台基本上都是这些漏洞类型</p><ul><li><p><a href="https://www.anquanke.com/post/id/241264">Android应用中常见漏洞总结</a></p></li><li><p><a href="https://ayesawyer.github.io/2019/08/21/Android-App%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/">Android APP常见安全漏洞</a></p></li><li><p>科恩APKpoker wiki</p></li></ul><p>APP层的漏洞可能更多的是信息泄露或则其他组合漏洞类型进行越权访问，危害性基本上是跟随着业务的重要性来决定。</p><p>学习教程</p><p><a href="https://github.com/Ralireza/Android-Security-Teryaagh">Android安全指南、路线图</a></p><p>练习教程</p><p>练习Android APP的漏洞类型，还是需要去分析漏洞demo</p><p>下面这几个漏洞demo都是值得去练习</p><p><a href="https://github.com/B3nac/InjuredAndroid">https://github.com/B3nac/InjuredAndroid</a></p><p><a href="https://github.com/dineshshetty/Android-InsecureBankv2">https://github.com/dineshshetty/Android-InsecureBankv2</a></p><p><a href="https://github.com/RavikumarRamesh/hpAndro1337">https://github.com/RavikumarRamesh/hpAndro1337</a></p><p><a href="https://github.com/OWASP/MSTG-Hacking-Playground">https://github.com/OWASP/MSTG-Hacking-Playground</a></p><p><a href="https://github.com/OWASP/owasp-mstg/tree/master/Crackmes">https://github.com/OWASP/owasp-mstg/tree/master/Crackmes</a></p><p><a href="https://github.com/satishpatnayak/AndroGoat">https://github.com/satishpatnayak/AndroGoat</a></p><p><a href="https://github.com/rewanthtammana/Damn-Vulnerable-Bank">https://github.com/rewanthtammana/Damn-Vulnerable-Bank</a></p><p>课后作业：总结练习的漏洞demo类型</p><p>参考文章：</p><p>1、在该<a href="https://blog.oversecured.com/">博客</a>中含有最新的APP漏洞分析</p><ul><li><a href="https://blog.oversecured.com/Android-security-checklist-webview/">Android安全检查表：Webview</a></li><li>对三星设备的原装APP漏洞挖掘 <a href="https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-1/">part1</a> <a href="https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-2/">part2</a></li></ul><p>2、破解小米的应用程序 <a href="http://blog.takemyhand.xyz/2021/07/hacking-on-xiaomis-android-apps.html">part1</a></p><p>3、Android中的特殊攻击面 <a href="https://paper.seebug.org/1174/">邪恶的对话框</a> <a href="https://paper.seebug.org/1175/">危险的deeplink</a> <a href="https://paper.seebug.org/1269/">隐藏的call函数</a></p><p>4、<a href="https://dphoeniixx.medium.com/tiktok-for-android-1-click-rce-240266e78105">Android版本的TikTok组合漏洞分析</a></p><h5 id="2、Android漏洞"><a href="#2、Android漏洞" class="headerlink" title="2、Android漏洞"></a><strong>2、Android漏洞</strong></h5><p><strong>这个部分的漏洞往往都是漏洞利用链，与Android系统相关的内容会比较多，难度也是比较大的，同时漏洞的危害也是相当大。</strong></p><p>基本的了解</p><ul><li>可以看Android安全团队的maddiestone Android Explort 101 <a href="https://www.youtube.com/watch?v=squuwVQiPgg">video</a>  <a href="https://docs.google.com/presentation/d/1StU5WdUD_qJiI_mUwU3dDRCsZUBDGxcf1C0lmzNSTPo/edit?resourcekey=0-O5HiPQO3EhH81rfBMHDHGw#slide=id.ged51bea2d0_0_147">PPT</a></li><li><a href="https://www.yuque.com/attachments/yuque/0/2021/pptx/12733198/1638716250138-babd972a-11a4-4446-8e06-b6ad435be97f.pptx">📎漏洞挖掘与利用-鹏城实验室交流.pptx</a></li></ul><p>这个主题是比较难并且分享也是比较少的，所以能够找到的教程也是非常少，很多学习基本上都是依靠自己来看相关安全会议的paper或者直接看漏洞公告分析补丁。</p><p><a href="https://fuzzing.science/page/rudroid-worlds-worst-android-emulator/">用Rust编写Android模拟器</a></p><p>针对Android的fuzz</p><ul><li><a href="https://alephsecurity.com/2021/11/16/fuzzing-qemu-android/">AFL++ on Android with QEMU support</a></li><li><a href="https://fuzzing.science/page/fuzzing-android-native-libraries-with-libfuzzer-qemu/">使用libFuzzer + QEMU 对Android原生库进行模糊测试</a></li></ul><p>参考文章</p><p>参考文章收集的都是比较经典的教程或者会议的paper</p><ul><li><p><a href="https://www.anquanke.com/post/id/202385">Android binder 越界访问漏洞 CVE-2020-0041</a></p></li><li><p><a href="https://bbs.pediy.com/thread-264616.htm">Android内核提权漏洞分析 CVE-2020-0423</a></p></li><li><p>Android内核提权漏洞 CVE-2019-2215 Binder UAF <a href="https://bbs.pediy.com/thread-264932.htm">paper1</a> <a href="https://bbs.pediy.com/thread-266198.htm">paper2</a></p></li><li><p><a href="https://vul.360.net/archives/144">Explorting the Promise.allsettled bug in V8</a></p></li><li><p>[Android Binder:The Bridge To Root](<a href="https://conference.hitb.org/hitbsecconf2019ams/materials/D2T2">https://conference.hitb.org/hitbsecconf2019ams/materials/D2T2</a> - Binder - The Bridge to Root - Hongli Han &amp; Mingjian Zhou.pdf)</p></li><li><p><a href="https://github.com/secmob/TiYunZong-An-Exploit-Chain-to-Remotely-Root-Modern-Android-Devices">An Exploit Chain to Remotely Root Modern Android Devices</a></p></li><li><p><a href="https://github.com/marcinguy/CVE-2019-2107">Android RCE CVE-2019-2107</a></p></li><li><p><a href="https://github.com/ScottyBauer/Android_Kernel_CVE_POCs">Android Kernel CVE POCs</a></p></li><li><p><a href="https://github.com/jiayy/android_vuln_poc-exp">Android POC&amp;EXP</a></p></li></ul><p>实际上这类漏洞都是与Linux kernel 或者 AOSP相关，甚至很多CVE是基于特定厂商的ROM才有的漏洞。</p><h5 id="3、Android漏洞的自动化探索"><a href="#3、Android漏洞的自动化探索" class="headerlink" title="3、Android漏洞的自动化探索"></a><strong>3、Android漏洞的自动化探索</strong></h5><p>这一小节就是来讲上面所学的漏洞类型进行抽象出来，探索自动化漏洞发掘方案。</p><h4 id="Linux漏洞"><a href="#Linux漏洞" class="headerlink" title="Linux漏洞"></a>Linux漏洞</h4><p>Linux漏洞应该算是各大平台的漏洞基础，很多平台都是基于Linux来进行开发的。</p><p>想要学习这块内容，前面的基础操作系统是必不可少的，熟悉Linux内核，最好是实现一个基本的Linux kernel</p><p>最强的学习清单：<a href="https://github.com/xairy/linux-kernel-exploitation">Linux-kernel-explortation</a></p><p>学习教程：</p><ul><li>pwn.college中的<a href="https://dojo.pwn.college/challenges/kernel">kernel</a>部分，并含有大量的练习题目。</li><li><a href="https://github.com/yuawn/kernel-exploitation">台大的Linux kernel教程</a></li></ul><p>视频教程：<a href="https://www.youtube.com/watch?v=sCaVRsDEpko">latest Linux kernel CVE security vulnerabilities</a></p><p>系列教程：<a href="https://cc-sir.github.io/tags/Linux-kernel/">Linux kernel Explort 内核漏洞学习</a></p><p>教程文章</p><ul><li><p><a href="https://github.com/hac425xxx/heap-exploitation-in-real-world">heap exploitation in real world</a></p></li><li><p><a href="https://github.com/stong/how-to-exploit-a-double-free">how to explort a double free</a></p></li><li><p><a href="https://github.com/shellphish/how2heap">how2heap</a></p></li></ul><p>学习文章</p><ul><li><p><a href="https://wizardforcel.gitbooks.io/sploitfun-linux-x86-exp-tut/content/3.html">off-by-one漏洞</a></p></li><li><p><a href="https://www.anquanke.com/post/id/227283">CVE-2020-14364漏洞复现-QEMU逃逸</a></p></li><li><p><a href="https://bbs.pediy.com/thread-265501.htm">QEMU逃逸初探</a></p></li><li><p><a href="https://bbs.pediy.com/thread-265744.htm">Linux蓝牙模块拒绝服务漏洞分析 CVE-2020-12351</a></p></li><li><p><a href="https://bbs.pediy.com/thread-266822.htm">Fastbin attack之2017 0CTF</a></p></li><li><p><a href="https://docs.google.com/presentation/d/19JaXHFMT-R2le6x-vPKw5D1Cxlw2aLtxHEIDwWBNXCQ/edit#slide=id.gda44520c30_7_54">Fuzz the linux kernel</a></p></li><li><p>Linux pwn题目入门 <a href="https://www.anquanke.com/post/id/258874">paper1</a></p></li><li><p><a href="https://www.anquanke.com/post/id/260055">西湖论剑2021 easykernel</a></p></li><li><p><a href="https://www.anquanke.com/post/id/258146">TCTF/0CTF 2021-final 两道kernel pwn</a></p></li><li><p><a href="https://github.com/xairy/kernel-exploits">kernel-exploits</a></p></li><li><p>CVE-2021-43008 利用Linux 6pack驱动程序中存在的16年漏洞 <a href="https://syst3mfailure.io/sixpack-slab-out-of-bounds">paper</a> <a href="https://github.com/0xdevil/CVE-2021-42008">exploit</a></p></li></ul><h4 id="IOT-车联网漏洞"><a href="#IOT-车联网漏洞" class="headerlink" title="IOT/车联网漏洞"></a>IOT/车联网漏洞</h4><p>IOT是一个比较热门的方向，目前来看难度也不是那么的顶，是学习漏洞挖掘可以考虑的路径。</p><p>由于这块是一个比较庞大的方向，又和前面的有一定的差异，因此这块内容规划有几个子模块。</p><h5 id="基础篇-1"><a href="#基础篇-1" class="headerlink" title="基础篇"></a>基础篇</h5><p>基础学习参考书籍</p><p>《家用路由器0day漏洞挖掘技术》</p><p>《物联网渗透测试》</p><p>当然针对不同的设备有不同的会有不同的书籍</p><p>基本学习的视频</p><ul><li><p><a href="https://www.bilibili.com/video/BV16J411T7eG?from=search&seid=7772199384721547380&spm_id_from=333.337.0.0">家用路由器漏洞挖掘入门-h4l</a>o</p></li><li><p><a href="https://www.bilibili.com/video/BV1dJ411D7Tf?from=search&seid=10741663428101961474&spm_id_from=333.337.0.0">边界IOT漏洞挖掘精要</a></p></li><li><p>看完这两个视频，基本上对IOT有大致的了解。</p></li></ul><p>比较全的IOT指南:<a href="https://iot-security.wiki/">https://iot-security.wiki/</a></p><p>学习文章</p><ul><li><p><a href="https://xz.aliyun.com/t/3826">路由器漏洞挖掘环境搭建</a> <a href="https://xz.aliyun.com/t/6071">part2</a></p></li><li><p><a href="https://www.anquanke.com/post/id/151277">物联网设备的固件模拟环境搭建</a></p></li><li><p>路由器漏洞挖掘之栈溢出入门 <a href="https://www.anquanke.com/post/id/169689">paper1</a> <a href="https://www.anquanke.com/post/id/171918">paper2</a> <a href="https://www.anquanke.com/post/id/172126">paper3</a> <a href="https://www.anquanke.com/post/id/173362">paper4</a></p></li></ul><h5 id="-1"><a href="#-1" class="headerlink" title=""></a></h5><h5 id="实战篇-1"><a href="#实战篇-1" class="headerlink" title="实战篇"></a>实战篇</h5><p>IOT这块学习主要还是去直接复现固件，学习别人的分析思路，分析漏洞，因为IOT涉及到的知识是比较全面。</p><p>参考文章</p><ul><li><p><a href="https://www.anquanke.com/post/id/179510">路由器漏洞挖掘之DIR-815栈溢出漏洞分析</a></p></li><li><p><a href="https://xz.aliyun.com/t/7394">CVE-2017-13089 wget栈溢出漏洞复现</a></p></li><li><p>三道与IOT相关的pwn题目 <a href="https://mp.weixin.qq.com/s/x19DiiitMeAm5VAupqzfdg">part1</a> <a href="https://www.anquanke.com/post/id/224972">part2</a></p></li><li><p><a href="https://www.anquanke.com/post/id/229323">CVE-2020-24581 D-Link DSL-2888A 远程命令执行漏洞分析</a></p></li><li><p><a href="https://www.anquanke.com/post/id/232845">IOT设备漏洞复现到固件后门植入</a></p></li><li><p><a href="https://www.anquanke.com/post/id/231445">CVE-2018-16333 Tenda路由器缓冲区溢出漏洞复现</a></p></li><li><p><a href="https://www.anquanke.com/post/id/233859">思科RV110W CVE-2020-3331漏洞调试与IOT靶场搭建</a></p></li><li><p><a href="https://www.anquanke.com/post/id/236133">D-Link路由器漏洞研究分享</a></p></li><li><p><a href="https://bbs.pediy.com/thread-266803.htm">一次嵌入式固件逆向实践</a></p></li><li><p>[家用路由器漏洞挖掘实例分析<a href="https://bbs.pediy.com/thread-268623.htm">图解D-LINK DIR-815多次溢出漏洞]</a></p></li><li><p><a href="https://bbs.pediy.com/thread-269063.htm">D-Link DIR-645路由器溢出分析</a></p></li><li><p><a href="https://paper.seebug.org/429/#d-link-dir-645-dir-815">D-Link系列路由器漏洞挖掘入门</a></p></li><li><p><a href="https://paper.seebug.org/879/">重现 TP-Link SR20 本地网络远程代码执行漏洞</a></p></li><li><p><a href="https://paper.seebug.org/1036/">D-Link DIR-816 A2路由器安全研究分享</a></p></li><li><p><a href="https://paper.seebug.org/1320/">海康萤石智能门锁的网关分析</a></p></li><li><p><a href="https://paper.seebug.org/1650/">D-Link DIR 3040 从信息泄露到 RCE</a></p></li><li><p><a href="https://paper.seebug.org/1651/">加密固件之依据老固件进行解密</a></p></li><li><p><a href="https://paper.seebug.org/1751/">天府杯华硕会战的围剿与反围剿</a></p></li></ul><h3 id="拓展篇"><a href="#拓展篇" class="headerlink" title="拓展篇"></a>拓展篇</h3><h4 id="前沿安全技术研究"><a href="#前沿安全技术研究" class="headerlink" title="前沿安全技术研究"></a>前沿安全技术研究</h4><p>这块主要是去阅读Fuzz或者和安全相关的paper，ppt等材料，算是能力的推展篇，可能对漏洞挖掘不会有很大的增幅，但是可以掌握。</p><p>既然是前沿安全技术研究，为了更加的凝聚，大致收集这几类的论文和演讲课题</p><ul><li><p>fuzzing 相关的论文以及课题</p></li><li><p>DL、ML应用于安全的论文以及课题</p></li><li><p>安全大杂烩——angr、新一代汇编工具、逆向思路</p></li><li><p>其他感兴趣的paper</p></li></ul><h5 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h5><p>李沐的<a href="https://www.bilibili.com/medialist/play/1567748478?from=space&business=space_collection&business_id=32744&desc=0">论文精读</a></p><p>在学习看论文或者是筛选论文之前，我想学习一下如何精读论文是一个非常好的开端。上面的教程就是教你如何选择合适的论文，如何去精读论文。</p><h5 id="fuzzing-相关"><a href="#fuzzing-相关" class="headerlink" title="fuzzing 相关"></a>fuzzing 相关</h5><p>基于AFL、libfuzzer等优秀的工具进行改写得fuzz，很多研究生的课题就是去漏洞挖掘，那必然会去二次开发或者重构自己的fuzz工具，适用于不同的场景，不同的设备来挖掘漏洞。</p><ul><li>推荐深圳大学博士生的 <a href="https://github.com/wcventure/FuzzingPaper">fuzz paper</a>项目，几乎涵盖了大部分与fuzz相关的论文和会议</li></ul><h5 id="DL、ML应用于安全的论文以及课题"><a href="#DL、ML应用于安全的论文以及课题" class="headerlink" title="DL、ML应用于安全的论文以及课题"></a>DL、ML应用于安全的论文以及课题</h5><p>机器学习和深度学习这块应用于安全还并不会特别的普遍，不过这应该是前沿技术研究，科恩就在尝试AI+binary的研究</p><p>有一个安全博主就在刚好写了一篇总结稿：<a href="https://github.com/404notf0und/AI-for-Security-Learning#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8">AI for security</a>，可以从中找到一点在安全方面的应用</p><p>《网络安全之机器学习》这本书也是一本讲解应用的书籍。</p><p>在看论文中，发现大部分的DL、ML都是在恶意软件识别</p><h5 id="安全大杂烩"><a href="#安全大杂烩" class="headerlink" title="安全大杂烩"></a>安全大杂烩</h5><ul><li><a href="https://github.com/aemmitt-ns/radius">使用rust写的一款符号执行和污点分析框架</a>，是基于radare2工具的插件</li><li><a href="https://www.4hou.com/posts/GzBr">使用污点分析批量挖掘路由器固件安全漏洞</a></li></ul><h4 id="IOS漏洞挖掘"><a href="#IOS漏洞挖掘" class="headerlink" title="IOS漏洞挖掘"></a>IOS漏洞挖掘</h4>]]></content>
    
    
    <categories>
      
      <category>漏洞挖掘</category>
      
      <category>Android安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习指南</tag>
      
      <tag>漏洞挖掘</tag>
      
      <tag>IOT安全</tag>
      
      <tag>Android安全</tag>
      
      <tag>Fuzzing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习指南</title>
    <link href="/2021/12/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <url>/2021/12/24/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p>现在可能并没有太多时间来专研这块，不过可以当做是自己的一个计划表吧，所以在这里做一个资料收集的目录，为以后学习铺一点路。该文案主要是收集以下内容：</p><p>1、深度学习入门资料</p><p>2、图像识别</p><p>3、智能风控</p><p>4、AI算法</p><p>5、深度学习框架库的使用</p><p>6、人工智能/深度学习在安全方面的应用</p><p>7、机器学习</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学习这一大类的知识，是需要一个数学功底和基础的编程知识，其中很多内容都是来源于统计学，实际上这也是这一类技术解决的问题，为大数据而生，需要使用数据来训练模型，才能后发挥出这项技术真正实力。</p><h1 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h1><p>比较喜欢天池平台上的一张图片</p><p><img src="https://s2.loli.net/2021/12/24/KNPnaBbS6kfToYz.png" alt="image-20211224171533670"></p><p>基本上涵盖了人工智能、机器学习和深度学习知识框架，当然在该平台上也含有挺多的课程，值得推荐。<a href="https://tianchi.aliyun.com/course">link</a></p><p>同时推荐国内最大的人工智能开源社区</p><p><a href="http://datawhale.club/latest">datawhale</a>，不过最丰富的还是其<a href="https://github.com/orgs/datawhalechina/repositories">github仓库</a>中，后面挺多的学习的资料都会引用其中的。</p><p>如果确实不太清楚怎么学，学习路径是什么，可以关注其<a href="https://github.com/datawhalechina/team-learning">组队学习</a>，几乎每个月都会组织组队学习。</p><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><p>基础学习当然是学习（复习）基本的数学知识，概率论、统计学、高等数学、线性代数等等知识。其次便是学习python语法和与数据处理相关的库。</p><p>基础学习推荐教程:天池平台中的<a href="https://tianchi.aliyun.com/course/260">python语法</a>和<a href="https://tianchi.aliyun.com/course/277">Al数学基础</a>两门课程</p><p>当然python语法学习和数学学习还有很对教程可以看，根据自己的实际情况学习</p><p>相关库学习推荐：<a href="https://tianchi.aliyun.com/course/323">NumPy</a>、<a href="https://tianchi.aliyun.com/course/325">Pandas</a>、<a href="https://tianchi.aliyun.com/course/324">Matplotlib</a></p><p>基本上这就是几个基本的python库，在后续的数据分析和挖掘过程中是使用最为频繁。</p><h3 id="数据分析课程"><a href="#数据分析课程" class="headerlink" title="数据分析课程"></a><strong>数据分析课程</strong></h3><p>我们的很对内容都是针对数据进行展开工作的，所以对数据分析、数据清洗是我们训练模型的前奏。</p><p>推荐课程：<a href="https://github.com/datawhalechina/hands-on-data-analysis">hands on data analysis</a></p><p>内容并不多，可以在学完基础的python和相关的库后进行学习</p><p>视频课程：<a href="https://space.bilibili.com/621981283/channel/detail?cid=191222">数据分析</a></p><h3 id="机器学习教程"><a href="#机器学习教程" class="headerlink" title="机器学习教程"></a><strong>机器学习教程</strong></h3><ul><li>吴恩达的<a href="https://www.bilibili.com/video/BV164411b7dx?from=search&seid=7824767836373798333&spm_id_from=333.337.0.0">机器学习</a>系列课程</li></ul><p>吴恩达的课程更多的是在学习机器学习的理论知识，同时也讲到了很对的机器学习算法，算是入门机器学习一个很经典的课程。</p><p><a href="https://github.com/TheisTrue/MLofAndrew-Ng">机器学习讲义</a></p><p><a href="https://github.com/Ayatans/Machine-Learning-homework">相关的学习笔记</a></p><ul><li>台湾大学李宏毅<a href="https://www.bilibili.com/video/BV1Wv411h7kN?from=search&seid=7824767836373798333&spm_id_from=333.337.0.0">机器学习</a>课程</li></ul><p>李宏毅讲过很多次机器学习课程，并且该课程在youtube上也是同步，同样也是学习机器学习非常经典的课程</p><p>官方博客地址：<a href="https://speech.ee.ntu.edu.tw/~hylee/ml/2021-spring.html">机器学习2021春季</a></p><p>学习笔记：<a href="https://github.com/datawhalechina/leeml-notes">李宏毅机器学习笔记</a> <a href="https://github.com/unclestrong/DeepLearning_LHY21_Notes">学习笔记2</a></p><p>课件及作业：<a href="https://github.com/Fafa-DL/Lhy_Machine_Learning">课件和作业</a></p><ul><li>南京大学周志华《机器学习》+《机器学习公式详解》</li></ul><p>这两本书算是非常经典的入门书籍，基本上都是用这两本书籍来入门学习。</p><p><a href="https://www.bilibili.com/video/BV17J411C7zZ?from=search&seid=7824767836373798333&spm_id_from=333.337.0.0">西瓜书白话解读</a>，专门讲解西瓜书的。</p><p><a href="https://www.bilibili.com/video/BV1Mh411e7VU">南瓜书的讲解</a>，实际上南瓜书是对西瓜书的一个补充和延伸</p><ul><li>浙江大学胡浩基<a href="https://www.bilibili.com/video/BV1qf4y1x7kB?from=search&seid=7824767836373798333&spm_id_from=333.337.0.0">机器学习</a>课程</li></ul><p>胡教授在讲授SVM支持向量机这块是非常的清晰的，优先推荐前面的三个课程来学习机器学习。</p><p>上面的课程基本上学习完成，课后作业也是写过后，基本上在机器学习理论上是没有什么问题，至于机器学习算法，原理应该都是可以理解的，最好的就是来点实战的项目进行落地实现。</p><p>如果时间不够，可以直接看天池平台的课程</p><p><a href="https://tianchi.aliyun.com/course/278">机器学习原理和实战</a></p><h3 id="深度学习课程"><a href="#深度学习课程" class="headerlink" title="深度学习课程"></a><strong>深度学习课程</strong></h3><p>深度学习在一定程度上会依靠机器学习相关的知识，知识解决的问题类型是不同的，深度学习更多的是偏向于图片识别、NLP、机器视觉等等问题。</p><ul><li>李沐<a href="https://www.bilibili.com/medialist/play/1567748478?from=space&business=space_series&business_id=358497&desc=0&spm_id_from=333.999.0.0">动手学习深度学习-PyTorch版</a></li></ul><p>这个课程是《动手学习深度学习》这本书的作者授课，内容是也是很不错的，作为深度学习入门PyTorch是很好的选择</p><p>课程网站：<a href="https://courses.d2l.ai/zh-v2/">https://courses.d2l.ai/zh-v2/</a></p><ul><li>复旦大学邱锡鹏 <a href="https://www.bilibili.com/video/BV13b4y1177W">神经网络与深度学习</a></li></ul><p>该课程在国内算是优秀的课程，并且在这个方向有挺大的影响力，基本上这个课程是深度学习基础课程，如果后期方向是CV、NLP，这个算是一个基础。</p><p><a href="https://nndl.github.io/">课程教材和PPT</a></p><ul><li>stanford <a href="https://www.youtube.com/watch?v=rmVRLeJRkl4&list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ">CS224N NLP with Deep Learning 2021</a></li></ul><p><a href="http://web.stanford.edu/class/cs224n/">课件与课程链接</a></p><p>这个课程同样是非常的经典，侧重在NLP与深度学习</p><ul><li>吴恩达 <a href="https://www.deeplearning.ai/programs/">Deepleraning.in</a>实际上是可以推荐的，毕竟在AI教育行业，是顶端的课程。</li></ul><p><a href="https://www.deeplearning.ai/program/deep-learning-specialization/">深度学习专业</a>总共五门课程</p><ul><li><p><a href="https://www.bilibili.com/video/av73508149">(吴恩达深度学习第一步)神经网络和深度学习</a></p></li><li><p><a href="https://www.bilibili.com/video/av73507314">(吴恩达深度学习第二步)改善深层神经网络：超参数调试、正则化以及优化</a></p></li><li><p><a href="https://www.bilibili.com/video/av73510602">(吴恩达深度学习第三步)结构化机器学习项目</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1e54y1b7uk?spm_id_from=333.999.0.0">(吴恩达深度学习第四步)卷积神经</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Co4y1279R?spm_id_from=333.999.0.0">（吴恩达深度学习第五步）NLP序列模型</a></p></li></ul><p>课程很多资源可以<a href="https://space.bilibili.com/46880349/channel/seriesdetail?sid=499489">B站</a>或者其<a href="https://www.deeplearning.ai/programs/">官方的网站</a>中看</p><h2 id="实战（进阶）篇"><a href="#实战（进阶）篇" class="headerlink" title="实战（进阶）篇"></a>实战（进阶）篇</h2><h3 id="数据挖掘实战"><a href="#数据挖掘实战" class="headerlink" title="数据挖掘实战"></a><strong>数据挖掘实战</strong></h3><p><strong>①、数据挖掘实战，势必会用到机器学习算法来训练模型，解决问题，这里首先推荐的是几款难度并不是很大的实战项目</strong></p><ul><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/RentForecast">数据挖掘实践（房租预测）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/AnomalyDetection">数据挖掘实战（异常检测）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/FinancialRiskControl">数据挖掘实践（金融风控）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/HeartbeatClassification">数据挖掘实践（心跳信号分类）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/WeatherOceanForecasts">数据挖掘实践（气象海洋预测）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/SecondHandCarPriceForecast">数据挖掘实践（二手车价格预测）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/CityManagement">数据挖掘实践（城市管理大数据）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/PurchaseAndRedemptionForecast">数据挖掘实践（资金流入流出预测）</a></p></li><li><p><a href="https://github.com/datawhalechina/team-learning-data-mining/tree/master/AcademicTrends">数据分析实践（学术前沿趋势分析）</a></p></li></ul><p>②、天池平台出版的《阿里云天池大赛赛题解析 机器学习篇》</p><p>在该本书中详细的讲解了四个经典的案例，用来实战学习机器学习，可以在天池平台实战</p><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a><strong>机器学习</strong></h3><p>斯坦福<a href="https://space.bilibili.com/1567748478/channel/collectiondetail?sid=28144">实用机器学习</a>2021秋季课</p><p>李沐大神在斯坦福开设的课程，不过在中国又开设了中文版本，非常值得学习</p><p>课程主页</p><p><a href="https://c.d2l.ai/stanford-cs329p/">https://c.d2l.ai/stanford-cs329p/</a></p><h3 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a><strong>深度学习</strong></h3><p>李沐的<a href="https://space.bilibili.com/1567748478/channel/collectiondetail?sid=32744">深度学习论文精读</a></p><p>这套课程的重点就是学习如何阅读论文，这些论文是精心挑选，基本上是深度学习必读的论文。</p><p>同时作者又一个<a href="https://github.com/mli/paper-reading">论文仓库</a>，值得我们学习</p>]]></content>
    
    
    <categories>
      
      <category>人工智能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习指南</tag>
      
      <tag>机器学习</tag>
      
      <tag>深度学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/24/hello-world/"/>
    <url>/2021/12/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
